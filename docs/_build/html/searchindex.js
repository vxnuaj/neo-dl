Search.setIndex({"docnames": ["examples", "index", "models", "modules", "setup"], "filenames": ["examples.rst", "index.rst", "models.rst", "modules.rst", "setup.rst"], "titles": ["Examples", "Nue", "Models", "&lt;no title&gt;", "Setup"], "terms": {"index": [], "modul": [], "search": [], "page": [], "packag": 1, "implement": [0, 1, 2], "pre": [0, 2], "built": [0, 1, 2], "machin": 2, "learn": [1, 2], "call": 2, "singl": 2, "function": 2, "contain": 2, "linear": [1, 2], "regress": [1, 2], "logist": [1, 2], "neural": [1, 2], "network": [1, 2], "usag": 2, "import": [0, 2], "us": 2, "from": [0, 2], "nue": [0, 2, 4], "class": 2, "linearregress": [0, 2, 3], "input": 2, "label": 2, "num_featur": 2, "alpha": 2, "epoch": 2, "sourc": 2, "base": 2, "object": 2, "backward": [2, 3], "perform": 2, "pass": 2, "calcul": 2, "gradient": 2, "weight": 2, "bia": 2, "return": 2, "tupl": 2, "dw": 2, "db": 2, "type": 2, "forward": [2, 3], "predict": 2, "valu": 2, "The": 2, "numpi": [0, 2], "ndarrai": 2, "gradient_desc": [2, 3], "descent": 2, "train": 2, "final": 2, "w": [0, 2], "b": [0, 2], "init_param": [2, 3], "initi": 2, "paramet": 2, "run": [0, 2], "entir": 2, "mse": [2, 3], "mean": [1, 2], "squar": 2, "error": 2, "between": 2, "actual": 2, "float": 2, "updat": [2, 3], "logisticregress": [0, 2, 3], "probabl": 2, "rtype": 2, "log_loss": [2, 3], "loss": 2, "cross": 2, "entropi": 2, "sigmoid": [2, 3], "z": 2, "given": 2, "num_class": 2, "hidden_s": 2, "relu": [2, 3], "appli": 2, "rectifi": 2, "unit": 2, "activ": 2, "element": 2, "wise": 2, "output": 2, "relu_deriv": [2, 3], "comput": 2, "deriv": 2, "accuraci": [2, 3], "percentag": 2, "through": 2, "bias": 2, "hidden": 2, "layer": 2, "cat_cross_entropi": [2, 3], "categor": 2, "each": 2, "one_hot": [2, 3], "convert": 2, "target": 2, "one": [0, 2], "hot": 2, "encod": 2, "format": 2, "softmax": [2, 3], "thi": [1, 2, 4], "section": 4, "provid": 4, "inform": 4, "how": [0, 4], "you": 4, "can": 4, "instal": [1, 4], "At": 4, "least": 4, "eventu": 4, "setup": [], "model": [0, 1, 3], "submodul": [], "content": [], "linreg": [0, 3], "logreg": [0, 3], "nn": [0, 3], "pip": 1, "i": [1, 2], "A": [1, 2], "deep": 1, "framework": 1, "design": [], "simpl": [], "gear": [1, 2], "toward": [1, 2], "entri": 1, "level": 1, "builder": [], "vxnuaj": 1, "http": [], "twitter": [], "com": [], "_": [], "still": 1, "under": 1, "develop": 1, "m": [1, 2], "build": 1, "continu": 1, "get": 1, "deeper": 1, "maxim": 1, "my": 1, "bear": 1, "me": 1, "figur": 1, "thing": 1, "out": 1, "obsess": 1, "learner": 1, "1": [0, 1, 2], "raw": [], "html": [], "div": [], "copyabl": [], "code": [], "languag": [], "python": [], "def": [], "hello": [], "print": 0, "world": [], "button": [], "onclick": [], "navig": [], "clipboard": [], "writetext": [], "n": 2, "copi": [], "test": [1, 2], "ani": 1, "follow": [1, 2], "mnist": 2, "like": [], "data": [0, 2], "classif": [1, 2], "task": 2, "feedforward": 1, "func": [], "sampl": 2, "pd": [0, 2], "read_csv": [0, 2], "exampl": 2, "mnist_train": [0, 2], "csv": [0, 2], "np": [0, 2], "arrai": [0, 2], "60000": [0, 2], "785": [0, 2], "y_train": [0, 2], "0": [0, 2], "t": [0, 2], "reshap": [0, 2], "x_train": [0, 2], "786": [0, 2], "255": [0, 2], "784": [0, 2], "10": [0, 2], "32": [0, 2], "1000": [0, 2], "process": [0, 2], "instanti": 2, "see": 2, "more": 2, "placehold": [], "link": [], "some": 0, "quick": 0, "might": 0, "panda": 0, "linear_regression_dataset2": 0, "4": 0, "3": 0, "500": 0, "2000": 0, "x_train_scal": 0, "min": 0, "axi": 0, "max": 0, "lr": 0, "001": 0, "10000": 0, "randomtrain": 0, "2": 0, "200": 0, "shape": [0, 2], "50000": 0, "13": [], "303": [], "input_data": [], "where": 2, "number": 2, "featur": 2, "total": 2, "numb": [], "per": 2, "rate": 2, "int": 2, "automodul": [], "member": [], "undoc": [], "show": [], "inherit": [], "matrix": 2, "veri": 1, "high": 1, "sculpt": 1, "seamless": 1, "hasn": 2, "been": 2, "other": 2, "applic": 2, "It": 2, "": 2, "digit": 2, "fashion": 2, "cifar": 2, "onto": 2, "dataset": 2, "mai": 2, "guarante": 2, "feel": 2, "free": 2, "experi": 2, "contribut": 2, "valid": 2, "param": [], "alia": [], "user": [], "juanvera": [], "document": [], "singular": [], "deeplearn": [], "py": [], "expect": 2}, "objects": {"": [[2, 0, 0, "-", "models"]], "models": [[2, 0, 0, "-", "linreg"], [2, 0, 0, "-", "logreg"], [2, 0, 0, "-", "nn"]], "models.linreg": [[2, 1, 1, "", "LinearRegression"]], "models.linreg.LinearRegression": [[2, 2, 1, "", "backward"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "gradient_descent"], [2, 2, 1, "", "init_params"], [2, 2, 1, "", "model"], [2, 2, 1, "", "mse"], [2, 2, 1, "", "update"]], "models.logreg": [[2, 1, 1, "", "LogisticRegression"]], "models.logreg.LogisticRegression": [[2, 2, 1, "", "backward"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "gradient_descent"], [2, 2, 1, "", "init_params"], [2, 2, 1, "", "log_loss"], [2, 2, 1, "", "model"], [2, 2, 1, "", "sigmoid"], [2, 2, 1, "", "update"]], "models.nn": [[2, 1, 1, "", "NN"]], "models.nn.NN": [[2, 2, 1, "", "ReLU"], [2, 2, 1, "", "ReLU_deriv"], [2, 2, 1, "", "accuracy"], [2, 2, 1, "", "backward"], [2, 2, 1, "", "cat_cross_entropy"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "gradient_descent"], [2, 2, 1, "", "init_params"], [2, 2, 1, "", "model"], [2, 2, 1, "", "one_hot"], [2, 2, 1, "", "softmax"], [2, 2, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"welcom": [], "nue": 1, "": [], "document": [], "content": [], "indic": [], "tabl": [], "model": 2, "submodul": [], "modul": [], "linreg": 2, "logreg": 2, "nn": 2, "setup": 4, "get": [], "start": [], "quickstart": 1, "main": [], "pre": [], "built": [], "sampl": [], "usag": [], "exampl": 0, "packag": [], "mnist": 0, "linear": 0, "regress": 0, "logist": 0, "neural": 0, "network": 0}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Setup": [[4, "setup"]], "Nue": [[1, "nue"]], "Quickstart": [[1, "quickstart"]], "Examples": [[0, "examples"]], "Linear Regression Example": [[0, "linear-regression-example"]], "Logistic Regression Example": [[0, "logistic-regression-example"]], "Neural Network Example for MNIST": [[0, "neural-network-example-for-mnist"]], "Models": [[2, "module-models"]], "models.linreg": [[2, "models-linreg"]], "models.logreg": [[2, "models-logreg"]], "models.nn": [[2, "models-nn"]]}, "indexentries": {"linearregression (class in models.linreg)": [[2, "models.linreg.LinearRegression"]], "logisticregression (class in models.logreg)": [[2, "models.logreg.LogisticRegression"]], "nn (class in models.nn)": [[2, "models.nn.NN"]], "relu() (models.nn.nn method)": [[2, "models.nn.NN.ReLU"]], "relu_deriv() (models.nn.nn method)": [[2, "models.nn.NN.ReLU_deriv"]], "accuracy() (models.nn.nn method)": [[2, "models.nn.NN.accuracy"]], "backward() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.backward"]], "backward() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.backward"]], "backward() (models.nn.nn method)": [[2, "models.nn.NN.backward"]], "cat_cross_entropy() (models.nn.nn method)": [[2, "models.nn.NN.cat_cross_entropy"]], "forward() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.forward"]], "forward() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.forward"]], "forward() (models.nn.nn method)": [[2, "models.nn.NN.forward"]], "gradient_descent() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.gradient_descent"]], "gradient_descent() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.gradient_descent"]], "gradient_descent() (models.nn.nn method)": [[2, "models.nn.NN.gradient_descent"]], "init_params() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.init_params"]], "init_params() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.init_params"]], "init_params() (models.nn.nn method)": [[2, "models.nn.NN.init_params"]], "log_loss() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.log_loss"]], "model() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.model"]], "model() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.model"]], "model() (models.nn.nn method)": [[2, "models.nn.NN.model"]], "models": [[2, "module-models"]], "models.linreg": [[2, "module-models.linreg"]], "models.logreg": [[2, "module-models.logreg"]], "models.nn": [[2, "module-models.nn"]], "module": [[2, "module-models"], [2, "module-models.linreg"], [2, "module-models.logreg"], [2, "module-models.nn"]], "mse() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.mse"]], "one_hot() (models.nn.nn method)": [[2, "models.nn.NN.one_hot"]], "sigmoid() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.sigmoid"]], "softmax() (models.nn.nn method)": [[2, "models.nn.NN.softmax"]], "update() (models.linreg.linearregression method)": [[2, "models.linreg.LinearRegression.update"]], "update() (models.logreg.logisticregression method)": [[2, "models.logreg.LogisticRegression.update"]], "update() (models.nn.nn method)": [[2, "models.nn.NN.update"]]}})